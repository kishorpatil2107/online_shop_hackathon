version: 0.2

env:
  parameter-store:
    DOCKER_REGISTRY_USERNAME: /myapp/docker-credentials/username
    DOCKER_REGISTRY_PASSWORD: /myapp/docker-credentials/password

phases:
  install:
    runtime-versions:
      nodejs: 12
    commands:
      - echo Installing Node.js and npm...
      - n 12
      - npm config set registry https://registry.npmjs.org/

  pre_build:
    commands:
      - echo Fetching credentials from AWS SSM...
      - export DOCKER_REGISTRY_USERNAME=$(aws ssm get-parameter --name "/myapp/docker-credentials/username" --with-decryption --query Parameter.Value --output text)
      - export DOCKER_REGISTRY_PASSWORD=$(aws ssm get-parameter --name "/myapp/docker-credentials/password" --with-decryption --query Parameter.Value --output text)
      - echo Logging in to Docker Hub...
      - echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin
      - IMAGE_REPO_NAME="tws-online-shop-app-demo"
      - IMAGE_NAME="$DOCKER_REGISTRY_USERNAME/$IMAGE_REPO_NAME"
      - BUILD_TAG=$(date +%Y%m%d%H%M%S)
      - IMAGE_TAG="$IMAGE_NAME:$BUILD_TAG"

  build:
    commands:
      - echo Build started on `date`
      - zip -r online-shop-app.zip * .[^.]* # Include all files and hidden files
      - echo Building the Docker image...
      - docker build -t $IMAGE_TAG .
      - docker tag $IMAGE_TAG $IMAGE_NAME:latest

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $IMAGE_TAG
      - docker push $IMAGE_NAME:latest
      - echo Uploading zip file to S3 root location...
      - aws s3 cp online-shop-app.zip s3://tws-online-shop-demo/online-shop-app/
      - echo Writing image definitions file...
      - printf '{"ImageURI":"%s", "Port":8000}' $IMAGE_NAME:latest > imageDefinitions.json
      - cat imageDefinitions.json

artifacts:
  files:
    - '**/*'
  exclude-patterns:
    - 'node_modules/**/*'
    - '.git/**/*'
    - '.gitignore'
    - 'README.md'
    - 'package-lock.json'
